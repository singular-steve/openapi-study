/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2017-06-22 08:19:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sds.testprovider.util.*;
import com.sds.testprovider.model.*;

public final class authorize_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	RequestTokenVO vo = (RequestTokenVO)request.getAttribute("requestTokenVO");
	//인증 처리는 session으로 하기로 결정
	String loginResult = (String)request.getAttribute("loginResult");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>SimpleProvide</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function goAllow() {\r\n");
      out.write("\tdocument.getElementById(\"f1\").submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function goDeny() {\r\n");
      out.write("\t//승인거부를 누르면 Provider에서 발급했던 Request token 정보를 삭제한다.\r\n");
      out.write("\t//이 예제에서는 tbl_request_toke테이블에서..삭제!\r\n");
      out.write("\tdocument.getElementById(\"allow_deny\").value=\"deny\";\r\n");
      out.write("\tdocument.getElementById(\"f1\").submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>Simple Provider Authorization!!</h2>\r\n");
      out.write("<hr>\r\n");
 if (loginResult != null && loginResult.equals("false")) { 
      out.write("\r\n");
      out.write("\t<div style=\"font-color: blue; font-size:13pt;\">\r\n");
      out.write("\t\t<b>로그인 실패!!! : 정확한 ID와 암호를 입력하십시오.</b>\r\n");
      out.write("\t</div>\r\n");
 } 
      out.write("\t\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<div style=\"font-size:16pt;\">'");
      out.print(vo.getAppName() );
      out.write("'이 당신의 계정 정보에 접근하는 것을 허용하시겠습니까?</div>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<form id=\"f1\" method=\"post\" action=\"authorize\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" id=\"oauth_token\" name=\"oauth_token\" \r\n");
      out.write("\t\t\t\tvalue=\"");
      out.print(vo.getRequestToken() );
      out.write("\" />\r\n");
      out.write("\t\t\t<input type=\"hidden\" id=\"allow_deny\" name=\"allow_deny\" value=\"allow\" /> \r\n");
  if (!SessionUtil.isLoginned(session)) { 
      out.write("\r\n");
      out.write("\t\t\tUser ID : <input id=\"userid\" name=\"userid\" type=\"text\" /><br/>\r\n");
      out.write("\t\t\tPassword : <input id=\"password\" name=\"password\" type=\"password\" \r\n");
      out.write("\t\t\t\tvalue=\"\" /><br/><br/>\r\n");
 } else { 
      out.write('\r');
      out.write('\n');
 UsersVO usersVO = SessionUtil.getUserInfo(session); 
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div>");
      out.print(usersVO.getUserid() );
      out.write('(');
      out.print(usersVO.getUsername() );
      out.write(") 님 로그인 중!!</div>\r\n");
      out.write("\t\t\t<br/><br/>\r\n");
      out.write("\r\n");
 } 
      out.write("\r\n");
      out.write("      \t\t<input type=\"button\" value=\"애플리케이션 승인\"  id=\"allow\" onclick=\"goAllow();\">\r\n");
      out.write("      \t\t<input type=\"button\" value=\"승인 거부\"  id=\"deny\" onclick=\"goDeny();\">\t\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
